SSSD Win AD 2016, Linux - Debian




Windows Server 2016 AD konfiguracia

Server Manager -> Add roles and features ->
	oznacit "Active Directory Domain Services"
	features:
		.NET Framework 4.6 Features

pri "Results" treba kliknut na "Promote this server to a DC" a vypisat potrebne veci

NetBios domain name:	SOS1.LOCAL

Potom kliknut na Install a je hotovo.

AD si automaticky vytv8ra DNS zaznamy pre pripojene zariadenia.





DEBIAN KONFIGURACIA

net ads join -U Administrator

Heslo pri vytvarani musi mat aspon 9 znakov, aspon 1 cislo, aspon 1 male pismeno a aspon 1 velke pismeno.





PRIPOJENIE DO DOMENY

Instalacia potrebnych balikov:
	apt-get install krb5-user sssd ntp ntpdate realmd

Konfiguracia:
KERBEROS

pri instalacii zadat:
	SOS1.LOCAL - default realm
	WINSERVER.SOS1.LOCAL - kdc
	WINSERVER.SOS1.LOCAL - admin-server

Potom povolime port 88.




SSSD

Vytvorime subor /etc/sssd/sssd.conf
a pridelime mu opravnenia: chmod root:root 600
OPRAVNENIA MUSIA BYT NASTAVENE NA 600, inak sa nespusti sluzba pri starte/restarte
DOMENY PISEME VELKYM PISMOM (lebo windows)


[sssd]
services = nss, pam
config_file_version = 2
domains = sos1.local
debug_level = 9

[nss]
filter_groups = root
filter_users = root
reconnection_retries = 3
entry_cache_timeout = 300
entry_cache_nowait_percentage = 75

[pam]
reconnection_retries = 3
offline_credentials_expiration = 2
offline_failed_login_attempts = 3
offline_failed_login_delay = 5



[domain/sos1.local]
ad_domain = sos1.local
krb5_realm = SOS1.LOCAL
realmd_tags = manages-system joined-with-samba
cache_credentials = True
id_provider = ad
krb5_store_password_if_offline = True
default_shell = /bin/bash
ldap_id_mapping = True
use_fully_qualified_names = True
access_provider = ad
#enumerate je volitelne - neodporuca sa pre realnu prevadzku. enumerate = true umozni vidiet pouzivatelske ucty v /etc/passwd
#enumerate = True
fallback_homedir = /home/%d/%u
override_homedir  = /home/%d/%u
default_shell = /bin/bash

#ldap_scheme = rfc2307bis
#ldap_group_name = uniqueMember
#ldap_netgroup_search_base = ou=Netgroup,dc=sos1,dc=local





REALMD

# pripojenie do domeny
# tento prikaz zmeni potrebne veci v sssd konfiguraku
realm join --user=Administrator@SOS1.LOCAL SOS1.LOCAL

# opustenie domeny
realm leave --user=Administrator@SOS1.LOCAL SOS1.LOCAL

# stav hosta v domene
realm status




NSS

Instalacia:
	apt-get install libnss-sss

Po instalacii sa subor /etc/nsswitch.conf automaticky upravi nasledovne:


passwd:         compat sss
group:          compat sss
shadow:         compat sss
gshadow:        files

hosts:          files dns
networks:       files

protocols:      db files
services:       db files sss
ethers:         db files
rpc:            db files

netgroup:       nis sss
sudoers:        files sss





PAM

Instalacia:
	apt-get install libpam-sss

Po nainstalovani sa do adresara pridaju subory:
	common-account
	common-auth
	common-password
	common-session


Obsah suboru "common-account":

#
# /etc/pam.d/common-account - authorization settings common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of the authorization modules that define
# the central access policy for use on the system.  The default is to
# only deny service to users whose accounts are expired in /etc/shadow.
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.
#

# here are the per-package modules (the "Primary" block)
account [success=1 new_authtok_reqd=done default=ignore]        pam_unix.so
# here's the fallback if no module succeeds
account requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
account required                        pam_permit.so
# and here are more per-package modules (the "Additional" block)
account sufficient                      pam_localuser.so
account [default=bad success=ok user_unknown=ignore]    pam_sss.so
# end of pam-auth-update config




Obsah suboru "common-auth":

#
# /etc/pam.d/common-auth - authentication settings common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of the authentication modules that define
# the central authentication scheme for use on the system
# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the
# traditional Unix authentication mechanisms.
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
auth    [success=2 default=ignore]      pam_unix.so nullok_secure
auth    [success=1 default=ignore]      pam_sss.so use_first_pass
# here's the fallback if no module succeeds
auth    requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth    required                        pam_permit.so
# and here are more per-package modules (the "Additional" block)
# end of pam-auth-update config





Obsah suboru "common-password":

#
# /etc/pam.d/common-password - password-related modules common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of modules that define the services to be
# used to change user passwords.  The default is pam_unix.

# Explanation of pam_unix options:
#
# The "sha512" option enables salted SHA512 passwords.  Without this option,
# the default is Unix crypt.  Prior releases used the option "md5".
#
# The "obscure" option replaces the old `OBSCURE_CHECKS_ENAB' option in
# login.defs.
#
# See the pam_unix manpage for other options.

# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
password        requisite                       pam_pwquality.so retry=3
password        [success=2 default=ignore]      pam_unix.so obscure use_authtok try_first_pass sha512
password        sufficient                      pam_sss.so use_authtok
# here's the fallback if no module succeeds
password        requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
password        required                        pam_permit.so
# and here are more per-package modules (the "Additional" block)
# end of pam-auth-update config



Obsah suboru "common-session":

#
# /etc/pam.d/common-session - session-related modules common to all services
#
# This file is included from other service-specific PAM config files,
# and should contain a list of modules that define tasks to be performed
# at the start and end of sessions of *any* kind (both interactive and
# non-interactive).
#
# As of pam 1.0.1-6, this file is managed by pam-auth-update by default.
# To take advantage of this, it is recommended that you configure any
# local modules either before or after the default block, and use
# pam-auth-update to manage selection of other modules.  See
# pam-auth-update(8) for details.

# here are the per-package modules (the "Primary" block)
session [default=1]                     pam_permit.so
# here's the fallback if no module succeeds
session requisite                       pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
session required                        pam_permit.so
# and here are more per-package modules (the "Additional" block)

# pam_mkhomedir bolo treba doplnit rucne!!!
session required        pam_unix.so
session required        pam_mkhomedir.so skel=/etc/skel/ umask=0022
session optional                        pam_sss.so
# end of pam-auth-update config



Logy su v adresari 
/var/log/sssd
a
/var/lib/sss
	adresar 'db' uchovava subory 'cache' - tieto subory umoznnuju prihlasit sa pouzivatelom na linuxovy server aj v pripade, ze windows server vypadne
	adresar 'mc' obsahuje binarne subory passwd a group ziskane z domenoveho radica






APACHE

#Instalovat apache
	apt-get install apache2
# Umozni pripojit sa na domovsky priecinok cez web browser
	a2enmod userdir
# V tomto konfiguraku sa daju nastavit cesty k domovskemu priecinku, opravnenia ...
	/etc/apache2/mods-enabled

Domovsky priecinok musi mat prava 711

Pripaja sa cez web browser na adresu
	158.193.139.70/~<meno_pouzivatela>






OVERENIE

getent passwd <pouzivatel>
